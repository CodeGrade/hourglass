<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/nix/store/yl7q0gjanvqhq33pbwnx10dq8jkr9l5q-tsung-1.7.0/share/tsung/tsung-1.0.dtd">
<tsung loglevel="debug" version="1.0">
  <clients>
    <client host="localhost" use_controller_vm="true" maxusers="60000"/>
  </clients>

  <servers>
    <server host="172.17.0.2" port="3000" type="tcp"/>
  </servers>

  <load>
    <arrivalphase phase="1" duration="60" unit="second">
      <!-- <users maxnumber="1" arrivalrate="100" unit="second"/> -->
      <users maxnumber="1000" arrivalrate="100" unit="second"/>
    </arrivalphase>
  </load>

  <options>
    <option name="ports_range" min="1025" max="65535"/>
  </options>

  <sessions>
    <session name="ask-question" probability="50" type="ts_http">
      <request>
        <dyn_variable name="authenticity_token" />
        <http url="/users/sign_in" method="GET" version="1.1" />
      </request>
      <setdynvars sourcetype="eval"
                  code="fun({Pid,DynVars})->
                            {ok,Val}=ts_dynvars:lookup(authenticity_token,DynVars),
                            http_uri:encode(Val) end.">
        <var name="encoded_authenticity_token" />
      </setdynvars>
      <request subst="true">
        <http url="/users/sign_in" method="POST" version="1.1"
          content_type='application/x-www-form-urlencoded'
          contents='authenticity_token=%%_encoded_authenticity_token%%&amp;user[username]=stresstest%%ts_user_server:get_unique_id%%&amp;user[password]=stresstest%%ts_user_server:get_unique_id%%'
        />
      </request>
      <setdynvars
        sourcetype="eval"
        code='fun({Pid,DynVars})->
                {ok,Val}=ts_dynvars:lookup(tsung_userid, DynVars),
                base64:encode_to_string(string:concat("Registration-", integer_to_list(Val + 2))) end.'>
        <var name="reg_id_enc" />
      </setdynvars>
      <for var="i" from="1" to="400" incr="1">
        <!-- <thinktime min="1" max="4" random="true"/> -->
        <request subst="true">
          <http url="/graphql" method="POST" version="1.1"
            content_type='application/json'
            contents='{"query":"mutation AskQuestionMutation(\n  $input: AskQuestionInput!\n) {\n  askQuestion(input: $input) {\n    question {\n      ...AskQuestion_single\n      id\n    }\n    questionEdge {\n      node {\n        id\n      }\n    }\n  }\n}\n\nfragment AskQuestion_single on Question {\n  createdAt\n  body\n}\n","variables":{"input":{"registrationId":"%%_reg_id_enc%%","body":"pls help"}}}'
            >
            <http_header name="X-CSRF-Token" value="%%_encoded_authenticity_token%%"/>
          </http>
        </request>
      </for>
    </session>
    <session name="subscribe-announcements" probability="50" type="ts_websocket">
      <request>
        <websocket type="connect" path="/cable"/>
      </request>

      <!-- <thinktime min="10" max="20" random="true" /> -->

      <request subst="true">
        <websocket type="message" frame="text">
          {"command":"subscribe","identifier":"{\"channel\":\"GraphqlChannel\"}"}
        </websocket>
      </request>

      <for var="i" from="1" to="2" incr="1">
        <thinktime min="1" max="4" random="true"/>
        <request subst="true">
          <websocket type="message" frame="text">
            {"command":"message","identifier":"{\"channel\":\"GraphqlChannel\"}","data":"{\"variables\":{\"roomId\":\"Um9vbS0x\"},\"operationName\":\"ExamMessagesNewRoomAnnouncementSubscription\",\"query\":\"380ad95a983c2d27addd2c632d420134\",\"action\":\"execute\"}"}
          </websocket>
        </request>
        <request subst="true">
          <websocket type="message" frame="text">
            {"command":"message","identifier":"{\"channel\":\"GraphqlChannel\"}","data":"{\"variables\":{\"examId\":\"RXhhbS0x\"},\"operationName\":\"ExamMessagesNewAnnouncementSubscription\",\"query\":\"58b6db09376e853af2b413e6753e0f39\",\"action\":\"execute\"}"}
          </websocket>
        </request>
        <request subst="true">
          <websocket type="message" frame="text">
            {"command":"message","identifier":"{\"channel\":\"GraphqlChannel\"}","data":"{\"variables\":{\"examVersionId\":\"RXhhbVZlcnNpb24tMQ==\"},\"operationName\":\"ExamMessagesNewVersionAnnouncementSubscription\",\"query\":\"7f32c0bf3953ad5ef40b48b239667746\",\"action\":\"execute\"}"}
          </websocket>
        </request>
        <setdynvars
          sourcetype="eval"
          code='fun({Pid,DynVars})->
                  {ok,Val}=ts_dynvars:lookup(tsung_userid, DynVars),
                  base64:encode_to_string(string:concat("Registration-", integer_to_list(Val + 2))) end.'>
          <var name="reg_id_enc" />
        </setdynvars>
        <request subst="true">
          <websocket type="message" frame="text">
            {"command":"message","identifier":"{\"channel\":\"GraphqlChannel\"}","data":"{\"variables\":{\"registrationId\":\"%%_reg_id_enc%%\"},\"operationName\":\"ExamMessagesSubscription\",\"query\":\"abedad610dad001a5bf4879f50546e77\",\"action\":\"execute\"}"}
          </websocket>
        </request>
      </for>
    </session>
  </sessions>
</tsung>
